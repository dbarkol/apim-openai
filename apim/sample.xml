<policies>
    <inbound>
        <base />

        <!-- Demonstrate how to check for a custom header and return a 401 for a specific value -->
        <!--
        <choose>           
            <when condition="@(context.Request.Headers.GetValueOrDefault("TestKey", "").Equals("TestValue", StringComparison.OrdinalIgnoreCase))">                
                <return-response>
                    <set-status code="401" reason="Unauthorized" />
                    <set-header name="Content-Type" exists-action="override">
                        <value>application/json</value>
                    </set-header>
                    <set-body>{
                            "message": "Unauthorized: Header value is 'TestValue'."
                        }</set-body>
                </return-response>
            </when>
        </choose>
        -->

        <!-- Use Managed Identity to authenticate to OpenAI -->
        <authentication-managed-identity resource="https://cognitiveservices.azure.com" output-token-variable-name="msi-access-token" ignore-error="false" />
        <set-header name="Authorization" exists-action="override">
            <value>@("Bearer " + (string)context.Variables["msi-access-token"])</value>
        </set-header>

        <!-- Retrieve the Azure OpenAI key from a named value and insert it into the header -->
        <!--
        <set-header name="api-key" exists-action="override">
            <value>{{azure-openai-key}}</value>
        </set-header>
        -->

    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>